---
name: Deploy Firebase Functions Manually
on:
  workflow_dispatch: null
jobs:
  deploy_functions:
    name: Deploy Functions
    runs-on: ubuntu-latest
    if: |
      secrets.FIREBASE_CONFIG_JSON != '' &&
      secrets.FIREBASE_SERVICE_ACCOUNT_AGENT_WEB_UI != ''
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Create firebaseConfig.json for Project ID extraction
        run: echo '${{ secrets.FIREBASE_CONFIG_JSON }}' > src/firebaseConfig.json
      - name: Install jq and Extract Project ID
        run: >
          sudo apt-get update && sudo apt-get install -y jq

          PROJECT_ID=$(jq -r '.projectId' src/firebaseConfig.json)

          if [ -z "$PROJECT_ID" ] || [ "$PROJECT_ID" == "null" ]; then
            echo "Error: projectId could not be extracted from FIREBASE_CONFIG_JSON."
            exit 1
          fi

          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV

          echo "Successfully extracted PROJECT_ID: $PROJECT_ID"
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_AGENT_WEB_UI }}
      - name: Deploy Firebase Functions
        run: >
          echo "Deploying Functions to project: ${{ env.PROJECT_ID }}"

          firebase deploy --only functions --project ${{ env.PROJECT_ID }} --force
      - name: Clean up service account key file (optional but good practice)
        if: always()
        run: |
          if [ -f "./firebase-service-account.json" ]; then
            rm -f ./firebase-service-account.json
          fi
          if [ -f "src/firebaseConfig.json" ]; then
            rm -f src/firebaseConfig.json
          fi
