name: Deploy Firebase Functions Manually

on:
  workflow_dispatch:
  
jobs:  
  deploy:  
    runs-on: ubuntu-latest  
    env:  
      # Path to your functions directory relative to the repository root  
      FUNCTIONS_DIR: functions  
  
    steps:  
      - name: Checkout Repository  
        uses: actions/checkout@v4  
  
      - name: Set up Python  
        uses: actions/setup-python@v5  
        with:  
          python-version: '3.11' # Specify your Python version used by Firebase Functions  
  
      - name: Install Python Dependencies  
        working-directory: ./${{ env.FUNCTIONS_DIR }}  
        run: |  
          pip install --upgrade pip  
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  
  
      - name: Set up Node.js (for Firebase CLI)  
        uses: actions/setup-node@v4  
        with:  
          node-version: '18' # Or a newer LTS version  
  
      - name: Install Firebase CLI  
        run: npm install -g firebase-tools  
  
      - name: Create Firebase Service Account File  
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_AGENT_WEB_UI }}' > ./firebase-service-account.json  
        # This service account will be used by firebase-tools for authentication  
  
      # Optional: Create Firebase Config JSON file if your functions need it at deploy/build time  
      # This is less common for pure function deployment.  
      # If your functions need this at runtime, they should typically fetch it or have it configured differently.  
      - name: Create Firebase Config JSON (if needed by functions at build/deploy)   
        run: echo '${{ secrets.FIREBASE_CONFIG_JSON }}' > ./${{ env.FUNCTIONS_DIR }}/firebase_config.json  
        # You might need to adjust the path above (e.g., ./firebase_config.json)  
        # depending on where your Python code expects to find it.  
  
      - name: Deploy to Firebase Functions  
        run: |  
          firebase deploy --only functions --project ${{ secrets.FIREBASE_PROJECT_ID }} --force  
        env:  
          # Use the service account for authentication with Firebase CLI  
          # GOOGLE_APPLICATION_CREDENTIALS is the standard env var for Google Cloud service accounts  
          GOOGLE_APPLICATION_CREDENTIALS: ./firebase-service-account.json  
          # Alternatively, for some firebase-tools versions, you might use FIREBASE_TOKEN  
          # but service account is generally preferred for CI/CD.  
          # FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} # This would be a CI token generated via `firebase login:ci`  
  
      - name: Clean up Service Account File  
        if: always() # Always run this step to ensure cleanup  
        run: rm -f ./firebase-service-account.json  
