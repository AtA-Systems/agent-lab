# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    # Only run this job if the FIREBASE_CONFIG_JSON secret is present in the repository.
    if: secrets.FIREBASE_CONFIG_JSON != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Firebase Config file and Extract Project ID
        run: |
          mkdir -p src # Ensure the src directory exists
          echo '${{ secrets.FIREBASE_CONFIG_JSON }}' > src/firebaseConfig.json
          # Extract projectId using jq and set it as an environment variable for subsequent steps
          # This step will fail if FIREBASE_CONFIG_JSON is not valid JSON, which is appropriate.
          echo "PROJECT_ID=$(echo '${{ secrets.FIREBASE_CONFIG_JSON }}' | jq -r .projectId)" >> $GITHUB_ENV
        shell: bash # Ensures jq is available and syntax is correct

      - name: Install Dependencies and Build
        run: |
          npm install
          npm run build

      - name: Deploy to Firebase Hosting (Live)
        # This step only runs if the service account secret is present AND a valid projectId was extracted.
        if: >-
          secrets.FIREBASE_SERVICE_ACCOUNT_AGENT_WEB_UI != '' &&
          env.PROJECT_ID != '' &&
          env.PROJECT_ID != 'null'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_AGENT_WEB_UI }}'
          channelId: live
          projectId: ${{ env.PROJECT_ID }} # Use the extracted project ID